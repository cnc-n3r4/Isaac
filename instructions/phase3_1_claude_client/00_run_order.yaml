phase: "3.1 - Claude API Client"
feature: "Core HTTP client for Claude AI integration"
estimated_time: "2 hours"
complexity: "MEDIUM"
risk: "MEDIUM"

# EXECUTION ORDER
run_order:
  - file: "01_feature_brief.md"
    purpose: "Understand Claude API integration"
    action: "READ FIRST - Provides AI context"
    
  - file: "02_impl_claude_client.md"
    purpose: "Create isaac/ai/claude_client.py (Parts 1-4)"
    action: "IMPLEMENT - Core AI HTTP client structure"
    estimated_time: "1.5 hours"
    
  - file: "03_impl_claude_client_continued.md"
    purpose: "Complete claude_client.py (Parts 5-6)"
    action: "IMPLEMENT - Finish AI methods"
    estimated_time: "0.5 hours"
    
  - file: "04_test_instructions.md"
    purpose: "Manual + unit testing"
    action: "VERIFY - Test API calls"
    estimated_time: "30 minutes"
    
  - file: "05_completion_report_template.md"
    purpose: "Document implementation"
    action: "FILL OUT after complete"

dependencies:
  required:
    - "Phase 1 complete (tier system working)"
    - "Phase 2.5 complete (CloudClient for syncing AI patterns)"
    
  external:
    - "Claude API key from Anthropic"
    - "requests library (already in requirements.txt)"

success_criteria:
  - "ClaudeClient class created with 4 AI methods"
  - "translate_to_shell() works (natural language â†’ command)"
  - "validate_command() works (Tier 3 safety checks)"
  - "correct_typo() works (typo detection)"
  - "plan_task() works (multi-step planning)"
  - "Graceful error handling (timeouts, API failures)"
  - "No crashes on network errors"

files_to_create:
  - "isaac/ai/__init__.py (package marker)"
  - "isaac/ai/claude_client.py (~200 lines)"

total_lines: "~200 lines"

safety_notes:
  - "All API calls have 10-second timeout"
  - "Methods return error dicts, never raise exceptions"
  - "API key stored in user config (not hardcoded)"
  - "AI translations MUST go through tier system (safety)"
